{"version":3,"sources":["Components/Header.jsx","Components/Visualization.jsx","Components/Footer.jsx","Algorithms/BubbleSort.jsx","Algorithms/MergeSort.jsx","Algorithms/QuickSort.jsx","Algorithms/HeapSort.jsx","Components/App.jsx","index.js"],"names":["Header","props","console","log","disabled","Grid","container","justify","alignItems","item","Button","className","size","onClick","mergeSort","style","letterSpacing","fontSize","fontWeight","fontFamily","color","marginLeft","heapSort","bubbleSort","quickSort","backgroundColor","newArray","variant","Visualization","array","width","length","margin","map","index","marginRight","height","Footer","spacing","xs","nrBars","Slider","marginTop","min","max","defaultValue","onChange","event","newValue","setNumberBars","speed","setSpeed","getBubbleSortAnimations","animations","inputArr","swapped","change","n","i","push","tmp","undefined","doBubbleSort","slice","getMergeSortAnimations","auxiliaryArray","mergeSortHelper","mainArray","startIdx","endIdx","middleIdx","Math","floor","k","j","done","doMerge","getQuickSortAnimations","arrayOne","arrayTwo","arraysAreEqual","sort","a","b","doQuickSort","swap","items","leftIndex","rightIndex","temp","left","right","pivotIndex","pivot","quickSortPartition","getHeapSortAnimations","arr","heapify","doHeapSort","largest","App","PRIMARY_COLOR","SECONDARY_COLOR","THIRD_COLOR","DONE_COLOR","useState","ANIMATION_SPEED_MS","setAnimationSpeed","NUMBER_OF_ARRAY_BARS","setDisabled","generateArray","setArray","x","random","handleNewArray","setBarsColor","arrayBars","document","getElementsByClassName","arrayLength","doneAnimation","setTimeout","barOneIdx","barTwoIdx","last","barOneStyle","barTwoStyle","aux","currentPosition","action","barThreeIdx","useEffect","splice","barThreeStyle","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.8e8d8f01.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid'\r\nfunction Header(props) {\r\n    console.log(props.disabled);\r\n\r\n    function handleClickMergeSort() {\r\n        props.mergeSort();\r\n    }\r\n\r\n    function handleClickQuickSort() {\r\n        props.quickSort();\r\n    }\r\n\r\n    function handleClickHeapSort() {\r\n        props.heapSort();\r\n    }\r\n\r\n    function handleClickBubbleSort() {\r\n        props.bubbleSort();\r\n    }\r\n\r\n    return (\r\n        <header>\r\n            <Grid container justify=\"space-between\" alignItems=\"center\">\r\n                <Grid item>\r\n                    <h1>Sorting Visualizer</h1>\r\n                </Grid>\r\n                <Grid item>\r\n                    <Button\r\n                        className=\"buttonHeader\"\r\n                        size=\"large\"\r\n                        onClick={handleClickMergeSort}\r\n                        style={{letterSpacing: \"1.4px\", fontSize: \"16px\",fontWeight:\"bold\", fontFamily: \"McLaren, cursive\", color: props.disabled?\"#05386B\":\"white\", marginLeft:\"10px\"}}\r\n                        disabled={props.disabled}\r\n\r\n                    >\r\n                        Merge Sort\r\n                    </Button>\r\n                    <Button\r\n                        className=\"buttonHeader\"\r\n                        size=\"large\"\r\n                        onClick={handleClickHeapSort}\r\n                        style={{letterSpacing: \"1.4px\", fontSize: \"16px\",fontWeight:\"bold\", fontFamily: \"McLaren, cursive\", color: props.disabled?\"#05386B\":\"white\", marginLeft:\"10px\"}}\r\n                        disabled={props.disabled}\r\n\r\n                    >\r\n                        Heap Sort\r\n                    </Button>\r\n                    <Button\r\n                        className=\"buttonHeader\"\r\n                        size=\"large\"\r\n                        onClick={handleClickBubbleSort}\r\n                        style={{letterSpacing: \"1.4px\", fontSize: \"16px\",fontWeight:\"bold\", fontFamily: \"McLaren, cursive\", color: props.disabled?\"#05386B\":\"white\", marginLeft:\"10px\"}}\r\n                        disabled={props.disabled}\r\n  \r\n                    >\r\n                        Bubble Sort\r\n                        </Button>\r\n                    <Button\r\n                        className=\"buttonHeader\"\r\n                        size=\"large\"\r\n                        onClick={handleClickQuickSort}\r\n                        style={{letterSpacing: \"1.4px\", fontSize: \"16px\",fontWeight:\"bold\", fontFamily: \"McLaren, cursive\", color: props.disabled?\"#05386B\":\"white\", marginLeft:\"10px\"}}\r\n                        disabled={props.disabled}\r\n\r\n                    >\r\n                        Quick Sort\r\n                    </Button>\r\n                    <Button\r\n                        style={{letterSpacing: \"1.4px\",fontSize: \"15px\",fontWeight:\"bold\", fontFamily: \"McLaren, cursive\", backgroundColor: !props.disabled?\"#05386B\":\"grey\", color: \"white\", marginLeft:\"10px\"}}\r\n                        size=\"large\"\r\n                        onClick={props.newArray}\r\n                        variant=\"contained\"\r\n                        disabled={props.disabled}\r\n                    >\r\n                        Generate new array\r\n                    </Button>\r\n                </Grid>\r\n            </Grid>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","import React, { useState } from 'react';\r\n\r\nfunction Visualization(props) {\r\n\r\n    const array = props.array\r\n    const width = array.length < 6 ?\r\n        9 : array.length < 10 ?\r\n            4.7 : array.length < 15 ?\r\n                3.5 : array.length < 20 ?\r\n                    2.3 : array.length < 30 ?\r\n                        1.3 : array.length < 50 ?\r\n                            1 : array.length < 65 ?\r\n                                0.8 : array.length < 80 ?\r\n                                    0.7 : array.length < 110 ?\r\n                                        0.5 : array.length < 140 ?\r\n                                            0.4 : 0.3;\r\n    const margin = array.length < 6 ?\r\n        5 : array.length < 10 ?\r\n            4 : array.length < 15 ?\r\n                3 : array.length < 20 ?\r\n                    1.8 : array.length < 30 ?\r\n                        1.5 : array.length < 50 ?\r\n                            1 : array.length < 65 ?\r\n                                0.9 : array.length < 80 ?\r\n                                    0.8 : array.length < 110 ?\r\n                                        0.7 : array.length < 140 ?\r\n                                            0.6 : 0.5;\r\n\r\n    return (\r\n        <div className=\"visualizationContainer\">\r\n            <div className=\"arrayContainer\">\r\n                {console.log(array.length)}\r\n                {props.array.map((item, index) => (\r\n                    <div style={{\r\n                        width: `${width}%`,\r\n                        marginLeft: `${margin}px`,\r\n                        marginRight: `${margin}px`,\r\n                        height: `${item}px`\r\n                    }}\r\n                        className=\"bar\"\r\n                        key={index}>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Visualization","import React from 'react';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nfunction Footer(props) {\r\n\r\n    function handleChangeBars(event, newValue) {\r\n        props.setNumberBars(newValue);\r\n    };\r\n\r\n    function handleChangeSpeed(event, newValue) {\r\n        props.setSpeed(newValue);\r\n    }\r\n\r\n    return (\r\n        <footer>\r\n            <Grid container spacing = {0} justify=\"center\">\r\n                <Grid item xs={6}>\r\n                    <h1>Number of elementssssssss: {props.nrBars}</h1>\r\n                    <Slider\r\n                        className=\"rail\"\r\n                        style={{ width: \"230px\", color:\"white\", marginTop:\"10px\"}}\r\n                        min={4}\r\n                        max={160}\r\n                        defaultValue={20}\r\n                        onChange={handleChangeBars}\r\n                        disabled={props.disabled} />\r\n                </Grid>\r\n                <Grid item xs = {6}>\r\n                    <h1>Animation speed: {props.speed}ms</h1>\r\n                        <Slider\r\n                        style={{ height:\"5\", width: \"230px\", color:\"white\", marginTop:\"10px\"}}\r\n                        min={2}\r\n                        max={1000}\r\n                        defaultValue={200}\r\n                        onChange={handleChangeSpeed} \r\n                        disabled={props.disabled}\r\n                        />\r\n                </Grid>\r\n            </Grid>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer; ","export function getBubbleSortAnimations(array) {\r\n    const animations = [];\r\n    if (array.length <= 1) return array;\r\n    const auxiliaryArray = array.slice();\r\n    doBubbleSort(animations, auxiliaryArray);\r\n    return animations;\r\n  };\r\n\r\n\r\nexport function doBubbleSort(animations, inputArr) {\r\n    var swapped;\r\n    var change = false;\r\n    var n = inputArr.length;\r\n    do {\r\n        n--\r\n        swapped = false;\r\n        for (let i = 0; i <n; i++) {\r\n            change=false;\r\n            if(i!==inputArr.length-1){\r\n                animations.push([i,i+1,change])}\r\n            if (inputArr[i] > inputArr[i + 1]) {\r\n                let tmp = inputArr[i];\r\n                inputArr[i] = inputArr[i + 1];\r\n                inputArr[i + 1] = tmp;\r\n                change=true;\r\n                swapped = true;\r\n                animations.push([i,i+1,change, 0])\r\n                animations.push([i,i+1,change, 1])\r\n                animations.push([i,i+1,change, 2])\r\n            }\r\n            if(i===n-1){\r\n                animations.push([i, i+1, undefined, undefined, true])\r\n            }\r\n            \r\n        }\r\n        \r\n    } while (swapped);\r\n    //animations.push([undefined, undefined, undefined, undefined, undefined, 1])\r\n    //animations.push([undefined, undefined, undefined, undefined, undefined, 2])\r\n    return inputArr;\r\n};\r\n\r\n","import { SystemUpdate } from \"@material-ui/icons\";\r\n\r\nexport function getMergeSortAnimations(array) {\r\n  const animations = [];\r\n  if (array.length <= 1) return array;\r\n  const auxiliaryArray = array.slice();\r\n  mergeSortHelper(array, 0, array.length - 1, auxiliaryArray, animations);\r\n  return animations;\r\n}\r\n\r\nfunction mergeSortHelper(\r\n  mainArray,\r\n  startIdx,\r\n  endIdx,\r\n  auxiliaryArray,\r\n  animations,\r\n) {\r\n  if (startIdx === endIdx) return;\r\n  const middleIdx = Math.floor((startIdx + endIdx) / 2);\r\n  mergeSortHelper(auxiliaryArray, startIdx, middleIdx, mainArray, animations);\r\n  mergeSortHelper(auxiliaryArray, middleIdx + 1, endIdx, mainArray, animations);\r\n  doMerge(mainArray, startIdx, middleIdx, endIdx, auxiliaryArray, animations);\r\n}\r\n\r\nfunction doMerge(\r\n  mainArray,\r\n  startIdx,\r\n  middleIdx,\r\n  endIdx,\r\n  auxiliaryArray,\r\n  animations,\r\n) {\r\n  let k = startIdx;\r\n  let i = startIdx;\r\n  let j = middleIdx + 1;\r\n  let done = endIdx===mainArray.length-1 && startIdx===0\r\n  while (i <= middleIdx && j <= endIdx) {\r\n\r\n    if (i !== j) {\r\n      animations.push([k, j, \"colorCompare\", done]);\r\n    }\r\n\r\n    if (auxiliaryArray[i] <= auxiliaryArray[j]) {\r\n      if(done){\r\n        animations.push([k, j, \"colorDone\"]);\r\n      }\r\n      mainArray[k++] = auxiliaryArray[i++];\r\n      \r\n    } else {\r\n      animations.push([k,j, \"colorSwap\"])\r\n      animations.push([k, j, \"swap\", done]);\r\n      animations.push([k, k+1, \"colorCompare\",done]);\r\n      if(done){\r\n        animations.push([k, k+1, \"colorDone\"]);\r\n      }\r\n      mainArray[k++] = auxiliaryArray[j++];\r\n    }\r\n\r\n  }\r\n  while (i <= middleIdx) {\r\n    if (k !== middleIdx && k !==mainArray.length-1) {\r\n      animations.push([k, middleIdx, \"colorCompare\", done]);\r\n      if(done){\r\n        animations.push([k, middleIdx, \"colorDone\"]);\r\n      }\r\n    }\r\n    mainArray[k++] = auxiliaryArray[i++];\r\n  }\r\n  while (j <= endIdx) {\r\n    if (k !== endIdx) {\r\n      animations.push([k, endIdx, \"colorCompare\", done]);\r\n      if(done){\r\n        animations.push([k, endIdx, \"colorDone\"]);\r\n      }\r\n    }\r\n    mainArray[k++] = auxiliaryArray[j++];\r\n  }\r\n}","export function getQuickSortAnimations(array) {\r\n    const animations = [];\r\n    if (array.length <= 1) return array;\r\n    const javaScriptSortedArray = array.slice().sort((a, b) => a - b);\r\n    if (arraysAreEqual(javaScriptSortedArray, array)) return animations;\r\n    const auxiliaryArray = array.slice();\r\n    doQuickSort(animations, auxiliaryArray, 0, auxiliaryArray.length - 1);\r\n    return animations;\r\n  }\r\n  function arraysAreEqual(arrayOne, arrayTwo) {\r\n    if (arrayOne.length !== arrayTwo.length) return false;\r\n    for (let i = 0; i < arrayOne.length; i++) {\r\n      if (arrayOne[i] !== arrayTwo[i]) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n  \r\n  function swap(animations, items, leftIndex, rightIndex) {\r\n    var temp = items[leftIndex];\r\n    items[leftIndex] = items[rightIndex];\r\n    items[rightIndex] = temp;\r\n  }\r\n\r\n  export function quickSortPartition(items, left, right, animations) {\r\n    let pivotIndex = Math.floor((right + left) / 2)\r\n    var pivot = items[pivotIndex], //middle element\r\n      i = left, //left pointer\r\n      j = right; //right pointer\r\n\r\n    animations.push([pivotIndex, undefined, \"setPivot\"])\r\n    animations.push([i, j, \"setPointers\", pivotIndex])    \r\n\r\n    while (i <= j) {\r\n      while (items[i] < pivot) {   \r\n        i++;\r\n        if(i!==j){\r\n        animations.push([i, i-1, \"setNextIndexi\", pivotIndex])}\r\n      }\r\n      while (items[j] > pivot) {\r\n        j--;\r\n        if(j!==i){\r\n        animations.push([j, j+1, \"setNextIndexj\", pivotIndex])}\r\n      }\r\n      if (i <= j) {\r\n        if(i!==j){\r\n        animations.push([i,j,\"swapColor\"])\r\n        animations.push([i, j, \"swap\"])\r\n        animations.push([i, j, \"swapped\"])}\r\n        swap(animations, items, i, j); //sawpping two elements\r\n        i++;\r\n        j--;\r\n        if(j>i){\r\n        animations.push([i, j, \"setPointers\", pivotIndex])}  \r\n      }\r\n    }\r\n    animations.push([undefined, undefined, \"doneIteration\"])\r\n    return i;\r\n  }\r\n  \r\n  export function doQuickSort(animations, items, left, right) {\r\n    var index;\r\n    if (items.length > 1) {\r\n      index = quickSortPartition(items, left, right, animations); //index returned from partition\r\n      if (left < index - 1) {\r\n        //more elements on the left side of the pivot\r\n        doQuickSort(animations, items, left, index - 1);\r\n      }\r\n      if (index < right) {\r\n        //more elements on the right side of the pivot\r\n        doQuickSort(animations, items, index, right);\r\n      }\r\n    }\r\n    return items;\r\n  }","export function getHeapSortAnimations(array) {\r\n    const animations = [];\r\n    if (array.length <= 1) return array;\r\n    const javaScriptSortedArray = array.slice().sort((a, b) => a - b);\r\n    if (arraysAreEqual(javaScriptSortedArray, array)) return animations;\r\n    const auxiliaryArray = array.slice();\r\n    doHeapSort(animations, auxiliaryArray)\r\n    return animations;\r\n  }\r\n  function arraysAreEqual(arrayOne, arrayTwo) {\r\n    if (arrayOne.length !== arrayTwo.length) return false;\r\n    for (let i = 0; i < arrayOne.length; i++) {\r\n      if (arrayOne[i] !== arrayTwo[i]) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  export function heapify(arr,length, i, animations){\r\n      let largest = i\r\n      let left = i*2 + 1\r\n      let right = left +1\r\n    if(left>=0 && left< length && right >=0 && right<length){\r\n      animations.push([left, right, \"color\", i,length])}\r\n      \r\n      if(left < length && arr[left]>arr[largest]){\r\n          largest = left\r\n      }\r\n\r\n      if(right < length && arr[right]>arr[largest]){\r\n          largest = right\r\n      }\r\n      if(largest !=i){\r\n          animations.push([i, largest, \"swapColor\", right===largest?left:right, length]);\r\n          animations.push([i, largest, \"swap\"]);\r\n          animations.push([i, largest, \"swapped\"]);\r\n          if(left>=0 && left< length ){\r\n         // animations.push([i, left, \"uncolor\", right, length]);\r\n        }\r\n          [arr[i], arr[largest]] = [arr[largest], arr[i]]\r\n          heapify(arr, length, largest, animations)\r\n      }else{\r\n\r\n        if(left>=0 && left< length){\r\n          //animations.push([i, left, \"uncolor\", right, length]);\r\n        }\r\n      }\r\n     \r\n      return arr\r\n  }\r\n\r\n  function doHeapSort(animations, arr){\r\n      let length = arr.length\r\n      let i = Math.floor(length/2 - 1)\r\n      let k = length - 1\r\n\r\n      while (i>=0){\r\n          heapify(arr, length, i, animations)\r\n          i--\r\n      }\r\n\r\n      while (k>=0){\r\n        animations.push([0, k, \"swapColor\", undefined, k]);\r\n        animations.push([0, k, \"swap\"]);\r\n        animations.push([0, k, \"swapped\"]);\r\n        animations.push([0, k, \"finalSwap\"]);\r\n        [arr[0], arr[k]] = [arr[k], arr[0]]\r\n        heapify(arr,k,0, animations)\r\n        k--\r\n      }\r\n      return arr\r\n  }","import React, { useEffect, useState } from \"react\";\r\nimport Header from \"./Header\"\r\nimport Visualization from \"./Visualization\"\r\nimport Footer from \"./Footer\"\r\nimport { getBubbleSortAnimations } from \"../Algorithms/BubbleSort\";\r\nimport { getMergeSortAnimations } from '../Algorithms/MergeSort';\r\nimport { getQuickSortAnimations } from '../Algorithms/QuickSort'\r\nimport { getHeapSortAnimations } from '../Algorithms/HeapSort'\r\n\r\n\r\nfunction App() {\r\n\r\n  const PRIMARY_COLOR = '#5CDB95';\r\n  const SECONDARY_COLOR = \"red\"\r\n  const THIRD_COLOR = \"#2191FB\"\r\n  const DONE_COLOR = \"#9213d1\"\r\n\r\n  const [ANIMATION_SPEED_MS, setAnimationSpeed] = useState(200);\r\n  const [NUMBER_OF_ARRAY_BARS, setNumberBars] = useState(20);\r\n  const [disabled, setDisabled] = useState(false);\r\n  const [array, setArray] = useState(generateArray());\r\n\r\n\r\n  useEffect(() => {\r\n    handleNewArray();\r\n  }, [NUMBER_OF_ARRAY_BARS]);\r\n\r\n\r\n  function randomIntFromInterval(min, max) {\r\n    return Math.floor(Math.random() * (max - min + 1) + min);\r\n  }\r\n\r\n  function generateArray() {\r\n    let x = []\r\n    for (let i = 0; i < NUMBER_OF_ARRAY_BARS; i++) {\r\n      x.push(randomIntFromInterval(50, 500))\r\n    }\r\n    return x;\r\n  }\r\n\r\n  function handleNewArray() {\r\n    let x = generateArray();\r\n    setArray(x);\r\n    setBarsColor(PRIMARY_COLOR)\r\n  }\r\n\r\n  function setBarsColor(color) {\r\n    const arrayBars = document.getElementsByClassName(\"bar\");\r\n    var arrayLength = arrayBars.length;\r\n    for (let j = 0; j < arrayLength; j++) {\r\n      var jBarStyle = arrayBars[j].style;\r\n      jBarStyle.backgroundColor = color;\r\n    }\r\n  }\r\n\r\n  function doneAnimation(i, length){\r\n    if (i === length - 1) {\r\n      const arrayBars = document.getElementsByClassName(\"bar\");\r\n      var arrayLength = arrayBars.length;\r\n      for (let j = 0; j < arrayLength; j++) {\r\n        setTimeout(() => {\r\n          var jBarStyle = arrayBars[j].style;\r\n          jBarStyle.backgroundColor = THIRD_COLOR;\r\n        }, (length - 1) * ANIMATION_SPEED_MS + 600 + j * 10)\r\n      }\r\n      setTimeout(() => {\r\n        setBarsColor(DONE_COLOR)\r\n        setDisabled(false);\r\n      }, (length - 1) * ANIMATION_SPEED_MS + 1300 + NUMBER_OF_ARRAY_BARS * 10)\r\n    }\r\n   \r\n  }\r\n\r\n  async function bubbleSort() {\r\n    setDisabled(true);\r\n    const animations = await getBubbleSortAnimations(array);\r\n    const arrayBars = document.getElementsByClassName('bar');\r\n    for (let i = 0; i < animations.length; i++) {\r\n      setTimeout(() => {\r\n        const [barOneIdx, barTwoIdx, swapped, index, last] = animations[i];\r\n        const barOneStyle = arrayBars[barOneIdx].style;\r\n        const barTwoStyle = arrayBars[barTwoIdx].style;\r\n        if (swapped && index === 1) {\r\n          var aux = array[barOneIdx];\r\n          array[barOneIdx] = array[barTwoIdx];\r\n          array[barTwoIdx] = aux;\r\n          barOneStyle.height = `${array[barOneIdx]}px`;\r\n          barTwoStyle.height = `${array[barTwoIdx]}px`;\r\n        }\r\n        else if (swapped && index === 0) {\r\n          barOneStyle.backgroundColor = SECONDARY_COLOR;\r\n          barTwoStyle.backgroundColor = SECONDARY_COLOR;\r\n        } else if ((swapped && index === 2) || !swapped) {\r\n          barOneStyle.backgroundColor = THIRD_COLOR;\r\n          barTwoStyle.backgroundColor = THIRD_COLOR;\r\n        }\r\n        if (last) {\r\n          barOneStyle.backgroundColor = PRIMARY_COLOR;\r\n          barTwoStyle.backgroundColor = DONE_COLOR;\r\n        }\r\n\r\n        var currentPosition = barOneIdx;\r\n        for (let j = 0; j < currentPosition; j++) {\r\n          var jBarStyle = arrayBars[j].style;\r\n          jBarStyle.backgroundColor = PRIMARY_COLOR;\r\n        }\r\n      }, i * ANIMATION_SPEED_MS + 500);\r\n      doneAnimation(i, animations.length);\r\n    }\r\n  }\r\n\r\n  function mergeSort() {\r\n    setDisabled(true);\r\n    var placeholderArray = array.slice();\r\n    const animations = getMergeSortAnimations(placeholderArray);\r\n    for (let i = 0; i < animations.length; i++) {\r\n      setTimeout(() => {\r\n\r\n        const arrayBars = document.getElementsByClassName('bar');\r\n        const [barOneIdx, barTwoIdx, action, done, message] = animations[i];\r\n        if (action === \"swap\") {\r\n          if (barTwoIdx < NUMBER_OF_ARRAY_BARS) {\r\n            const aux = array[barTwoIdx]\r\n            array.splice(barTwoIdx, 1);\r\n            array.splice(barOneIdx, 0, aux);\r\n            for (let j = done ? barOneIdx : 0; j < NUMBER_OF_ARRAY_BARS; j++) {\r\n              const barThreeStyle = arrayBars[j].style;\r\n              barThreeStyle.height = `${array[j]}px`;\r\n              barThreeStyle.backgroundColor = PRIMARY_COLOR;\r\n            }\r\n            arrayBars[barOneIdx].style.backgroundColor = SECONDARY_COLOR\r\n            arrayBars[barOneIdx + 1].style.backgroundColor = SECONDARY_COLOR\r\n\r\n          }\r\n        }\r\n        if (action === \"colorCompare\") {\r\n          if (barTwoIdx < NUMBER_OF_ARRAY_BARS && barOneIdx >= 0) {\r\n            for (let j = done ? barOneIdx : 0; j < NUMBER_OF_ARRAY_BARS; j++) {\r\n              const style = arrayBars[j].style;\r\n              style.backgroundColor = PRIMARY_COLOR;\r\n            }\r\n            const barOneStyle = arrayBars[barOneIdx].style;\r\n            const barTwoStyle = arrayBars[barTwoIdx].style;\r\n            barOneStyle.backgroundColor = THIRD_COLOR;\r\n            barTwoStyle.backgroundColor = THIRD_COLOR;\r\n          }\r\n        }\r\n\r\n        if (action === \"colorSwap\") {\r\n          const barOneStyle = arrayBars[barOneIdx].style;\r\n          const barTwoStyle = arrayBars[barTwoIdx].style;\r\n          barOneStyle.backgroundColor = SECONDARY_COLOR;\r\n          barTwoStyle.backgroundColor = SECONDARY_COLOR;\r\n        }\r\n\r\n        if (action === \"colorDone\") {\r\n          const barOneStyle = arrayBars[barOneIdx].style;\r\n          barOneStyle.backgroundColor = DONE_COLOR;\r\n          if (barOneIdx + 1 === array.length - 1) {\r\n            setBarsColor(DONE_COLOR);\r\n          }\r\n        }\r\n\r\n      }, i * ANIMATION_SPEED_MS + 500);\r\n      doneAnimation(i, animations.length);\r\n    }\r\n\r\n  }\r\n\r\n  async function quickSort() {\r\n    setDisabled(true);\r\n    const animations = await getQuickSortAnimations(array);\r\n    const arrayBars = document.getElementsByClassName('bar');\r\n    if (animations.length ===0){\r\n      setDisabled(false);\r\n    }\r\n    for (let i = 0; i < animations.length; i++) {\r\n      setTimeout(() => {\r\n        const [barOneIdx, barTwoIdx, action, pivotIndex] = animations[i];\r\n        if (action === \"setPivot\") {\r\n          const barOneStyle = arrayBars[barOneIdx].style;\r\n          barOneStyle.backgroundColor = \"yellow\";\r\n        }\r\n\r\n        if (action === \"setPointers\") {\r\n          if (barOneIdx >= 0 && barOneIdx < NUMBER_OF_ARRAY_BARS) {\r\n            const barOneStyle = arrayBars[barOneIdx].style;\r\n            barOneStyle.backgroundColor = SECONDARY_COLOR;\r\n          }\r\n          if (barTwoIdx >= 0 && barTwoIdx < NUMBER_OF_ARRAY_BARS) {\r\n            const barTwoStyle = arrayBars[barTwoIdx].style;\r\n            barTwoStyle.backgroundColor = SECONDARY_COLOR;\r\n          }\r\n          if (barOneIdx !== 0) {\r\n            const previousStyle = arrayBars[barOneIdx - 1].style;\r\n            previousStyle.backgroundColor = (pivotIndex === barTwoIdx + 1) ? \"yellow\" : PRIMARY_COLOR;\r\n          }\r\n          if (barTwoIdx < NUMBER_OF_ARRAY_BARS - 1) {\r\n            const previousStyle = arrayBars[barTwoIdx + 1].style;\r\n            previousStyle.backgroundColor = (pivotIndex === barOneIdx - 1) ? \"yellow\" : PRIMARY_COLOR;\r\n          }\r\n        }\r\n\r\n\r\n\r\n        if (action === \"setNextIndexi\") {\r\n          const barOneStyle = arrayBars[barOneIdx].style;\r\n          const barTwoStyle = arrayBars[barTwoIdx].style;\r\n          barOneStyle.backgroundColor = SECONDARY_COLOR;\r\n          barTwoStyle.backgroundColor = barTwoIdx !== pivotIndex ? PRIMARY_COLOR : \"yellow\"\r\n        }\r\n\r\n        if (action === \"setNextIndexj\") {\r\n          const barOneStyle = arrayBars[barOneIdx].style;\r\n          const barTwoStyle = arrayBars[barTwoIdx].style;\r\n          barOneStyle.backgroundColor = SECONDARY_COLOR;\r\n          barTwoStyle.backgroundColor = barTwoIdx !== pivotIndex ? PRIMARY_COLOR : \"yellow\";\r\n        }\r\n\r\n        if (action === \"swapColor\") {\r\n          const barOneStyle = arrayBars[barOneIdx].style;\r\n          const barTwoStyle = arrayBars[barTwoIdx].style;\r\n          barOneStyle.backgroundColor = THIRD_COLOR;\r\n          barTwoStyle.backgroundColor = THIRD_COLOR;\r\n        }\r\n\r\n        if (action === \"swap\") {\r\n          const barOneStyle = arrayBars[barOneIdx].style;\r\n          const barTwoStyle = arrayBars[barTwoIdx].style;\r\n          var aux = array[barOneIdx];\r\n          array[barOneIdx] = array[barTwoIdx];\r\n          array[barTwoIdx] = aux;\r\n          barOneStyle.height = `${array[barOneIdx]}px`;\r\n          barTwoStyle.height = `${array[barTwoIdx]}px`;\r\n        }\r\n\r\n        if (action === \"swapped\") {\r\n          const barOneStyle = arrayBars[barOneIdx].style;\r\n          const barTwoStyle = arrayBars[barTwoIdx].style;\r\n          barOneStyle.backgroundColor = SECONDARY_COLOR;\r\n          barTwoStyle.backgroundColor = SECONDARY_COLOR;\r\n        }\r\n\r\n        if (action === \"doneIteration\") {\r\n          for (let j = 0; j < NUMBER_OF_ARRAY_BARS; j++) {\r\n            var jBarStyle = arrayBars[j].style;\r\n            jBarStyle.backgroundColor = PRIMARY_COLOR;\r\n          }\r\n        }\r\n\r\n\r\n\r\n\r\n      }, i * ANIMATION_SPEED_MS + 500);\r\n      doneAnimation(i, animations.length);\r\n    }\r\n  }\r\n\r\n  async function heapSort() {\r\n    setDisabled(true);\r\n    const animations = await getHeapSortAnimations(array);\r\n    const arrayBars = document.getElementsByClassName('bar');\r\n    if (animations.length ===0){\r\n      setDisabled(false);\r\n    }\r\n    for (let i = 0; i < animations.length; i++) {\r\n      setTimeout(() => {\r\n        const [barOneIdx, barTwoIdx, action, barThreeIdx, length] = animations[i];\r\n        if (action === \"swap\") {\r\n          const barOneStyle = arrayBars[barOneIdx].style;\r\n          const barTwoStyle = arrayBars[barTwoIdx].style;\r\n          var aux = array[barOneIdx];\r\n          array[barOneIdx] = array[barTwoIdx];\r\n          array[barTwoIdx] = aux;\r\n          barOneStyle.height = `${array[barOneIdx]}px`;\r\n          barTwoStyle.height = `${array[barTwoIdx]}px`;\r\n        }\r\n\r\n        if (action === \"swapColor\") {\r\n\r\n          for (let j = 0; j < length; j++) {\r\n            var jBarStyle = arrayBars[j].style;\r\n            jBarStyle.backgroundColor = PRIMARY_COLOR;\r\n          }\r\n          const barOneStyle = arrayBars[barOneIdx].style;\r\n          const barTwoStyle = arrayBars[barTwoIdx].style;\r\n\r\n          barOneStyle.backgroundColor = SECONDARY_COLOR;\r\n          barTwoStyle.backgroundColor = SECONDARY_COLOR;\r\n          if (barThreeIdx >= 0 && barThreeIdx < length) {\r\n            const barThreeStyle = arrayBars[barThreeIdx].style;\r\n            barThreeStyle.backgroundColor = THIRD_COLOR;\r\n          }\r\n        }\r\n\r\n        if (action === \"swapped\") {\r\n          const barOneStyle = arrayBars[barOneIdx].style;\r\n          const barTwoStyle = arrayBars[barTwoIdx].style;\r\n          barOneStyle.backgroundColor = \"yellow\";\r\n          barTwoStyle.backgroundColor = THIRD_COLOR;\r\n        }\r\n\r\n        if (action === \"color\") {\r\n          for (let j = 0; j < length; j++) {\r\n            var jBarStyle = arrayBars[j].style;\r\n            jBarStyle.backgroundColor = PRIMARY_COLOR;\r\n          }\r\n          if (barOneIdx >= 0 && barOneIdx < NUMBER_OF_ARRAY_BARS) {\r\n            const barOneStyle = arrayBars[barOneIdx].style;\r\n            barOneStyle.backgroundColor = THIRD_COLOR;\r\n          }\r\n          if (barTwoIdx >= 0 && barTwoIdx < NUMBER_OF_ARRAY_BARS) {\r\n            const barTwoStyle = arrayBars[barTwoIdx].style;\r\n            barTwoStyle.backgroundColor = THIRD_COLOR;\r\n          }\r\n          if (barThreeIdx >= 0 && barThreeIdx < NUMBER_OF_ARRAY_BARS) {\r\n            const barThreeStyle = arrayBars[barThreeIdx].style;\r\n            barThreeStyle.backgroundColor = \"yellow\";\r\n          }\r\n\r\n        }\r\n\r\n        if (action === \"finalSwap\") {\r\n          const barOneStyle = arrayBars[barOneIdx].style;\r\n          const barTwoStyle = arrayBars[barTwoIdx].style;\r\n          barOneStyle.backgroundColor = PRIMARY_COLOR;\r\n          barTwoStyle.backgroundColor = DONE_COLOR;\r\n        }\r\n      }, i * ANIMATION_SPEED_MS + 500);\r\n\r\n      doneAnimation(i, animations.length);\r\n    }\r\n  }\r\n\r\n  \r\n\r\n\r\n  return (\r\n    <div>\r\n      <Header\r\n        disabled={disabled}\r\n        newArray={handleNewArray}\r\n        bubbleSort={bubbleSort}\r\n        mergeSort={mergeSort}\r\n        quickSort={quickSort}\r\n        heapSort={heapSort}\r\n        setDisabled={setDisabled}\r\n      />\r\n      <Visualization array={array} />ssss\r\n      <Footer\r\n        setNumberBars={setNumberBars}\r\n        setSpeed={setAnimationSpeed}\r\n        speed={ANIMATION_SPEED_MS}\r\n        nrBars={NUMBER_OF_ARRAY_BARS}\r\n        disabled={disabled}\r\n      />\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default App","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./Components/App\"\n\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}